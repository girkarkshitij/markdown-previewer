{"version":3,"sources":["App.js","index.js"],"names":["marked","require","setOptions","breaks","App","props","state","markdown","this","setState","className","id","cols","rows","value","onChange","e","updateMarkdown","target","dangerouslySetInnerHTML","__html","React","Component","ReactDOM","render","document","getElementById"],"mappings":"2NAEMA,G,MAASC,EAAQ,KAEvBD,EAAOE,WAAW,CACdC,QAAQ,I,IA8FGC,E,kDA1FX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACTC,SAAS,msCAHE,E,2DAoDJA,GACXC,KAAKC,SAAS,CAAEF,e,+BAGV,IAAD,OACL,OACI,yBAAKG,UAAU,aACX,kDAEA,yBAAKA,UAAU,oBACX,sCACA,yBAAKA,UAAU,cACX,8BACIC,GAAG,SACHC,KAAK,MACLC,KAAK,KACLC,MAAON,KAAKF,MAAMC,SAClBQ,SAAU,SAACC,GACP,EAAKC,eAAeD,EAAEE,OAAOJ,YAM7C,yBAAKJ,UAAU,uBACX,yCACA,yBACIC,GAAG,UACHQ,wBAAyB,CACrBC,OAAQpB,EAAOQ,KAAKF,MAAMC,mB,GAlFpCc,IAAMC,WCJxBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.53c28218.chunk.js","sourcesContent":["import React from 'react';\nimport './style.css';\nconst marked = require('marked');\n\nmarked.setOptions({\n    breaks: true,\n});\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            markdown: `\n# Welcome to my React Markdown Previewer!\n\n## This is a sub-heading...\n### And here's some other cool stuff:\n\nHeres some code, \\`<div></div>\\`, between 2 backticks.\n\n\\`\\`\\`\n// this is multi-line code:\n\nfunction anotherExample(firstLine, lastLine) {\n  if (firstLine == '\\`\\`\\`' && lastLine == '\\`\\`\\`') {\n    return multiLineCode;\n  }\n}\n\\`\\`\\`\n\nYou can also make text **bold**... whoa!\nOr _italic_.\nOr... wait for it... **_both!_**\nAnd feel free to go crazy ~~crossing stuff out~~.\n\nThere's also [links](https://www.freecodecamp.com), and\n> Block Quotes!\n\nAnd if you want to get really crazy, even tables:\n\nWild Header | Crazy Header | Another Header?\n------------ | ------------- | -------------\nYour content can | be here, and it | can be here....\nAnd here. | Okay. | I think we get it.\n\n- And of course there are lists.\n  - Some are bulleted.\n     - With different indentation levels.\n        - That look like this.\n\n\n1. And there are numbererd lists too.\n1. Use just 1s if you want!\n1. And last but not least, let's not forget embedded images:\n\n![React Logo w/ Text](https://upload.wikimedia.org/wikipedia/commons/thumb/a/a7/React-icon.svg/1280px-React-icon.svg.png)\n\n            `,\n        };\n    }\n\n    updateMarkdown(markdown) {\n        this.setState({ markdown });\n    }\n\n    render() {\n        return (\n            <div className='container'>\n                <h1>Markdown Previewer</h1>\n\n                <div className='editor-container'>\n                    <h2>Editor</h2>\n                    <div className='mark-input'>\n                        <textarea\n                            id='editor'\n                            cols='100'\n                            rows='20'\n                            value={this.state.markdown}\n                            onChange={(e) => {\n                                this.updateMarkdown(e.target.value);\n                            }}\n                        ></textarea>\n                    </div>\n                </div>\n\n                <div className='previewer-container'>\n                    <h2>Previewer</h2>\n                    <div\n                        id='preview'\n                        dangerouslySetInnerHTML={{\n                            __html: marked(this.state.markdown),\n                        }}\n                    ></div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}